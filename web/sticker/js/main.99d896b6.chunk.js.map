{"version":3,"sources":["context/index.js","components/sticker-list/index.js","components/sticker-list/sticker-list.js","services/sticker-service.js","components/app/index.js","components/app/app.js","index.js"],"names":["StickerServiceContext","React","createContext","StickerList","useState","stickers","setStickers","edit","setEdit","stickerService","useContext","useEffect","getStickers","then","onChangePosition","evt","preventDefault","button","container","document","querySelector","idx","currentTarget","getAttribute","coordContainer","sort","reduce","max","sticker","console","log","newObj","startCords","x","clientX","y","clientY","onMouseMove","evtMove","shiftCords","left","offsetLeft","top","offsetTop","offsetWidth","offsetHeight","id","name","description","color","wide","ready","slice","addEventListener","onMouseUp","evtUp","removeEventListener","setSticker","res","catch","e","error","onChangeTitle","value","target","onChangeText","onChangeColor","stickerList","map","index","title","type","data-index","className","onChange","controll","onClick","onSaveSticker","onChangeSticker","window","confirm","deleteSticker","onDeleteSticker","width","readyClass","colorBtn","key","data-id","style","backgroundColor","zIndex","onReady","onMouseDown","onChangeSize","createSticker","StickerService","getResource","url","a","params","fetch","ok","Error","status","json","replace","method","App","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.99d896b6.chunk.js","sourcesContent":["import React from 'react';\n\nconst StickerServiceContext = React.createContext();\n\nexport { StickerServiceContext };","import StickerList from './sticker-list';\n\nexport default StickerList;","import React, { useState, useEffect, useContext } from 'react';\n\nimport { StickerServiceContext } from '../../context';\n\nimport TextareaAutosize from 'react-textarea-autosize';\n\nimport './sticker-list.scss';\n\nconst StickerList = () => {\n\n\n    const [stickers, setStickers] = useState([]);\n\n    const [edit, setEdit] = useState(false);\n\n    const stickerService = useContext(StickerServiceContext);\n\n    useEffect(() => {\n        // setStickers(stickerService._stickers);\n        stickerService.getStickers().then((stickers) => {\n            setStickers(stickers);\n        })\n\n    }, [stickerService]);\n\n    const onChangePosition = (evt) => {\n        evt.preventDefault();\n\n        if (evt.button !== 0) return false;\n\n        const container = document.querySelector('#sticker');\n\n        const idx = evt.currentTarget.getAttribute('data-index') * 1;\n        const coordContainer = document.querySelector('[data-id=\"'+ idx +'\"]');\n\n        const sort = stickers.reduce((max, sticker) => sticker.sort > max ? sticker.sort : max , 0) + 1;\n        console.log(idx);\n\n        let startCords = {\n            x: evt.clientX,\n            y: evt.clientY\n        }\n\n       let newObj;\n\n        const onMouseMove = function (evtMove) {\n            evtMove.preventDefault();\n\n            const shiftCords = {\n                x: startCords.x - evtMove.clientX,\n                y: startCords.y - evtMove.clientY\n            }\n\n            startCords = {\n                x: evtMove.clientX,\n                y: evtMove.clientY\n            }\n\n            let left = coordContainer.offsetLeft - shiftCords.x;\n            let top = coordContainer.offsetTop - shiftCords.y;\n\n            if ( coordContainer.offsetLeft - shiftCords.x < 0 ) {\n                left = 0;\n            }\n\n            if ( coordContainer.offsetTop - shiftCords.y < 0 ) {\n                top = 0;\n            }\n\n            if (container.offsetWidth < coordContainer.offsetLeft + coordContainer.offsetWidth - shiftCords.x ) {\n                left = container.offsetWidth - coordContainer.offsetWidth;\n            }\n\n            if (container.offsetHeight < coordContainer.offsetTop + coordContainer.offsetHeight - shiftCords.y) {\n                top = container.offsetHeight - coordContainer.offsetHeight;\n            }\n\n            // console.log(stickers[idx].sort);\n\n            newObj = {\n                id: stickers[idx].id,\n                name: stickers[idx].name,\n                description: stickers[idx].description,\n                color: stickers[idx].color,\n                left: left,\n                top: top,\n                sort: sort,\n                wide: stickers[idx].wide,\n                ready: stickers[idx].ready\n            }\n\n            setStickers([\n                ...stickers.slice(0, idx),\n                newObj,\n                ...stickers.slice(idx + 1),\n            ]);\n\n        }\n\n        const onMouseUp = function (evtUp) {\n            evtUp.preventDefault();\n\n            document.removeEventListener('mousemove', onMouseMove);\n            document.removeEventListener('mouseup', onMouseUp);\n            \n            stickerService.setSticker(newObj).then((res) => {\n                console.log('res', res);\n            }).catch((e) => {\n                console.error(e);\n            })\n\n        }\n\n        document.addEventListener('mousemove', onMouseMove);\n        document.addEventListener('mouseup', onMouseUp);\n    }\n\n    const onChangeTitle = (evt) => {\n        const value = evt.target.value;\n\n        const idx = 1 * evt.target.getAttribute('data-index');\n\n        const newObj = {\n            id: stickers[idx].id,\n            name: value,\n            color: stickers[idx].color,\n            description: stickers[idx].description,\n            left: stickers[idx].left,\n            top: stickers[idx].top,\n            sort: stickers[idx].sort,\n            wide: stickers[idx].wide,\n            ready: stickers[idx].ready\n        }\n\n        setStickers([\n            ...stickers.slice(0, idx),\n            newObj,\n            ...stickers.slice(idx + 1)\n        ]);\n    }\n\n    const onChangeText = (evt) => {\n        const value = evt.target.value;\n\n        const idx = 1 * evt.target.getAttribute('data-index');\n\n        const newObj = {\n            id: stickers[idx].id,\n            name: stickers[idx].name,\n            color: stickers[idx].color,\n            description: value,\n            left: stickers[idx].left,\n            top: stickers[idx].top,\n            sort: stickers[idx].sort,\n            wide: stickers[idx].wide,\n            ready: stickers[idx].ready\n        }\n\n        setStickers([\n            ...stickers.slice(0, idx),\n            newObj,\n            ...stickers.slice(idx + 1)\n\n        ])\n    }\n\n    const onChangeSticker = (index) => {\n        setEdit(index);\n    }\n\n    const onSaveSticker = (index) => {\n        \n        stickerService.setSticker(stickers[index]).then((res) => {\n            console.log('onChange', res);\n        })\n\n        setEdit(false);\n    }\n\n    const onDeleteSticker = (index) => {\n        if ( window.confirm('Вы действительно хотите удалить эту запись?') ) {\n\n            stickerService.deleteSticker(stickers[index].id).then((res) => {\n                setStickers([\n                    ...stickers.slice(0, index),\n                    ...stickers.slice(index + 1)\n                ]);\n            }).catch((e) => console.error(e));\n        }\n    }\n\n    const onCreateSticker = () => {\n        const sort = stickers.reduce((max, sticker) => sticker.sort * 1 > max ? sticker.sort : max, 0) * 1 + 1;\n\n        stickerService.createSticker(sort).then((sticker) => {\n            // const newObj = {\n            //     id: sticker.id,\n            //     name: sticker.name,\n            //     color: sticker.color,\n            //     description: '',\n            //     left: sticker.left,\n            //     top: sticker.top,\n            //     wide: 0,\n            //     sort: sort\n            // }\n\n            setStickers([\n                ...stickers,\n                sticker\n            ]);\n\n        }).catch((e) => console.error(e));\n\n    }\n\n    const onChangeSize = (idx) => {\n        const newObj = {\n            id: stickers[idx].id,\n            name: stickers[idx].name,\n            color: stickers[idx].color,\n            description: stickers[idx].description,\n            left: stickers[idx].left,\n            top: stickers[idx].top,\n            sort: stickers[idx].sort,\n            wide: stickers[idx].wide === 1 ? 0 : 1,\n            ready: stickers[idx].ready\n        }\n\n        setStickers([\n            ...stickers.slice(0, idx),\n            newObj,\n            ...stickers.slice(idx + 1)\n        ])\n    }\n\n    const onChangeColor = (evt) => {\n        const idx = evt.currentTarget.getAttribute('data-index') * 1;\n        const newObj = {\n            id: stickers[idx].id,\n            name: stickers[idx].name,\n            color: evt.currentTarget.value,\n            description: stickers[idx].description,\n            left: stickers[idx].left,\n            top: stickers[idx].top,\n            sort: stickers[idx].sort,\n            wide: stickers[idx].wide,\n            ready: stickers[idx].ready\n        }\n\n        stickerService.setSticker(newObj).then((res) => {\n            setStickers([\n                ...stickers.slice(0, idx),\n                newObj,\n                ...stickers.slice(idx + 1)\n            ]);\n        })\n\n\n        \n\n\n    }\n\n    const onReady = (idx) => {\n        const newObj = {\n            id: stickers[idx].id,\n            name: stickers[idx].name,\n            color: stickers[idx].color,\n            description: stickers[idx].description,\n            left: stickers[idx].left,\n            top: stickers[idx].top,\n            sort: stickers[idx].sort,\n            wide: stickers[idx].wide,\n            ready: stickers[idx].ready * 1 ? 0 : 1\n        }\n\n        stickerService.setSticker(newObj).then((res) => {\n            setStickers([\n                ...stickers.slice(0, idx),\n                newObj,\n                ...stickers.slice(idx + 1)\n            ])\n        })\n        \n    }\n\n    const stickerList = stickers.map((sticker, index) => {\n\n        const title = edit === index ?\n            <input type=\"text\" data-index={index} className=\"sticker__title\" value={sticker.name} onChange={onChangeTitle} />\n            : <p className=\"sticker__title\">{sticker.name}</p>;\n\n        const description = edit === index ?\n            <TextareaAutosize data-index={index} onChange={onChangeText} value={sticker.description} />\n            : <p className=\"\">{sticker.description}</p>;\n\n        const controll = edit === index ?\n              <span onClick={() => onSaveSticker(index)} className=\"sticker__link sticker__link--save\">Сохранить</span>\n            : <><span onClick={() => onChangeSticker(index)} className=\"sticker__link glyphicon glyphicon-pencil\"></span>\n                <span onClick={() => onDeleteSticker(index)} className=\"sticker__link sticker__link--del glyphicon glyphicon-trash\"></span></>;\n\n        const width = sticker.wide * 1 === 1 ? '400px' : '200px';\n        const readyClass = sticker.ready * 1 === 1 ? 'ready' : '';\n\n        const colorBtn = sticker.ready * 1 === 1 ? <div>Завершено...</div> : <input type=\"color\" data-index={index} value={sticker.color} onChange={onChangeColor} /> ;\n\n        return (\n\n            <div\n                key={index}\n                data-id={index}\n                className={`sticker__card ${readyClass}`}\n                style={{ backgroundColor: sticker.color, left: sticker.left + 'px', top: sticker.top + 'px', zIndex: sticker.sort, width: width }}>\n\n                <div className=\"sticker__header\">\n\n                    <span onClick={() => onReady(index)} className=\"sticker__checkbox\" ></span>\n\n                    <div className=\"sticker__move\"\n                        data-index={index}\n                        onMouseDown={onChangePosition}></div>\n\n                    <button type=\"button\"\n                        onClick={() => onChangeSize(index)}\n                        className=\"sticker__btn\">\n                        <span className={sticker.wide * 1 === 1 ? 'glyphicon glyphicon-resize-small' : 'glyphicon glyphicon-resize-full'}></span>\n                    </button>\n\n                </div>\n                <div className=\"sticker__body\">\n                    <div className=\"sticker__form-group\">\n                        {title}\n                    </div>\n\n                    <div className=\"sticker__form-group\">\n                        {description}\n                    </div>\n                </div>\n\n                <div className=\"sticker__footer\">\n                    {colorBtn}\n                    <div>\n                        {controll}\n                    </div>\n                </div>\n\n            </div>\n        )\n    })\n\n    return (\n        <div>\n            <div className=\"bg-white mg-bottom\">\n                <button className=\"btn btn-primary\" onClick={onCreateSticker}>Создать заметку</button>\n            </div>\n\n            <div className=\"bg-white mg-bottom\">\n                <div className=\"sticker\" id=\"sticker\">\n                    {stickerList}\n                </div>\n            </div>\n        </div>\n\n\n    )\n}\n\nexport default StickerList;","export default class StickerService {\r\n\r\n    /**\r\n     * Выполняем fetch запрос\r\n     */\r\n    getResource = async (url, params = {}) => {\r\n        const res = await fetch(url, params);\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url} , received ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    getStickers = async () => {\r\n        return await this.getResource(`/journal/get-stickers`);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    setSticker = async (sticker) => {\r\n        const color = sticker.color.replace('#', '');\r\n        return await this.getResource(`/journal/set-sticker?id=${sticker.id}&left=${sticker.left}&top=${sticker.top}&name=${sticker.name}&description=${sticker.description}&color=${color}&ready=${sticker.ready}`, {\r\n            method: 'GET'\r\n        });\r\n    }\r\n\r\n    createSticker = async (sort) => {\r\n        return await this.getResource(`/journal/create-sticker?sort=${sort}`);\r\n    }\r\n\r\n    deleteSticker = async (id) => {\r\n        return await this.getResource(`/journal/delete-sticker?id=${id}`);\r\n    }\r\n}","import App from './app';\n\nexport default App;","import React from 'react';\n\nimport StickerList from '../sticker-list';\n\nimport './app.scss';\n\nimport StickerService from '../../services/sticker-service';\nimport { StickerServiceContext } from '../../context';\n\n\nconst App = () => {\n\n    const stickerService = new StickerService();\n\n    return (\n\n            <StickerServiceContext.Provider value={stickerService}>\n                <StickerList />\n            </StickerServiceContext.Provider>\n\n    );\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('sticker-app'));\n\n"],"sourceRoot":""}